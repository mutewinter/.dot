// vim: ft=jsonc
// Place your key bindings in this file to override the defaults
[
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "f3",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "f3",
    "command": "-list.find.replInputFocus",
    "when": "view == 'workbench.panel.repl.view'"
  },
  {
    "key": "f4",
    "command": "-references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "f4",
    "command": "-goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "cmd+down",
    "command": "-workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "f3",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+escape",
    "command": "-workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "f4",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "alt+k",
    "command": "-editor.action.accessibilityHelpConfigureKeybindings",
    "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.navigateUp",
    "when": "neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w up",
    "command": "-workbench.action.navigateUp",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.navigateDown",
    "when": "neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w down",
    "command": "-workbench.action.navigateDown",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "alt+h",
    "command": "-editor.action.accessibilityHelpOpenHelpLink",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.navigateLeft",
    "when": "neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w left",
    "command": "-workbench.action.navigateLeft",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.navigateRight",
    "when": "neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w right",
    "command": "-workbench.action.navigateRight",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  }
]
