[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "type" : "Module",
    "desc" : "Modal keybindings environment management. Just an wrapper of `hs.hotkey.modal`.",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "Field" : [

    ],
    "Method" : [
      {
        "desc" : "Create a new modal keybindings environment",
        "stripped_doc" : [
          "Create a new modal keybindings environment",
          ""
        ],
        "def" : "ModalMgr:new(id)",
        "doc" : "Create a new modal keybindings environment\n\nParameters:\n * id - A string specifying ID of new modal keybindings",
        "notes" : [

        ],
        "signature" : "ModalMgr:new(id)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "new",
        "parameters" : [
          " * id - A string specifying ID of new modal keybindings"
        ]
      },
      {
        "desc" : "Toggle the cheatsheet display of current modal environments's keybindings.",
        "stripped_doc" : [
          "Toggle the cheatsheet display of current modal environments's keybindings.",
          ""
        ],
        "def" : "ModalMgr:toggleCheatsheet([idList], [force])",
        "doc" : "Toggle the cheatsheet display of current modal environments's keybindings.\n\nParameters:\n * iterList - An table specifying IDs of modal environments or active_list. Optional, defaults to all active environments.\n * force - A optional boolean value to force show cheatsheet, defaults to `nil` (automatically).",
        "notes" : [

        ],
        "signature" : "ModalMgr:toggleCheatsheet([idList], [force])",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "toggleCheatsheet",
        "parameters" : [
          " * iterList - An table specifying IDs of modal environments or active_list. Optional, defaults to all active environments.",
          " * force - A optional boolean value to force show cheatsheet, defaults to `nil` (automatically)."
        ]
      },
      {
        "desc" : "Activate all modal environment in `idList`.",
        "stripped_doc" : [
          "Activate all modal environment in `idList`.",
          ""
        ],
        "def" : "ModalMgr:activate(idList, [trayColor], [showKeys])",
        "doc" : "Activate all modal environment in `idList`.\n\nParameters:\n * idList - An table specifying IDs of modal environments\n * trayColor - An optional string (e.g. #000000) specifying the color of modalTray, defaults to `nil`.\n * showKeys - A optional boolean value to show all available keybindings, defaults to `nil`.",
        "notes" : [

        ],
        "signature" : "ModalMgr:activate(idList, [trayColor], [showKeys])",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "activate",
        "parameters" : [
          " * idList - An table specifying IDs of modal environments",
          " * trayColor - An optional string (e.g. #000000) specifying the color of modalTray, defaults to `nil`.",
          " * showKeys - A optional boolean value to show all available keybindings, defaults to `nil`."
        ]
      },
      {
        "desc" : "Deactivate modal environments in `idList`.",
        "stripped_doc" : [
          "Deactivate modal environments in `idList`.",
          ""
        ],
        "def" : "ModalMgr:deactivate(idList)",
        "doc" : "Deactivate modal environments in `idList`.\n\nParameters:\n * idList - An table specifying IDs of modal environments",
        "notes" : [

        ],
        "signature" : "ModalMgr:deactivate(idList)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "deactivate",
        "parameters" : [
          " * idList - An table specifying IDs of modal environments"
        ]
      },
      {
        "desc" : "Deactivate all active modal environments.",
        "stripped_doc" : [
          "Deactivate all active modal environments."
        ],
        "def" : "ModalMgr:deactivateAll()",
        "doc" : "Deactivate all active modal environments.",
        "notes" : [

        ],
        "signature" : "ModalMgr:deactivateAll()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "deactivateAll",
        "parameters" : [

        ]
      }
    ],
    "Command" : [

    ],
    "items" : [
      {
        "desc" : "Activate all modal environment in `idList`.",
        "stripped_doc" : [
          "Activate all modal environment in `idList`.",
          ""
        ],
        "def" : "ModalMgr:activate(idList, [trayColor], [showKeys])",
        "doc" : "Activate all modal environment in `idList`.\n\nParameters:\n * idList - An table specifying IDs of modal environments\n * trayColor - An optional string (e.g. #000000) specifying the color of modalTray, defaults to `nil`.\n * showKeys - A optional boolean value to show all available keybindings, defaults to `nil`.",
        "notes" : [

        ],
        "signature" : "ModalMgr:activate(idList, [trayColor], [showKeys])",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "activate",
        "parameters" : [
          " * idList - An table specifying IDs of modal environments",
          " * trayColor - An optional string (e.g. #000000) specifying the color of modalTray, defaults to `nil`.",
          " * showKeys - A optional boolean value to show all available keybindings, defaults to `nil`."
        ]
      },
      {
        "desc" : "Deactivate modal environments in `idList`.",
        "stripped_doc" : [
          "Deactivate modal environments in `idList`.",
          ""
        ],
        "def" : "ModalMgr:deactivate(idList)",
        "doc" : "Deactivate modal environments in `idList`.\n\nParameters:\n * idList - An table specifying IDs of modal environments",
        "notes" : [

        ],
        "signature" : "ModalMgr:deactivate(idList)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "deactivate",
        "parameters" : [
          " * idList - An table specifying IDs of modal environments"
        ]
      },
      {
        "desc" : "Deactivate all active modal environments.",
        "stripped_doc" : [
          "Deactivate all active modal environments."
        ],
        "def" : "ModalMgr:deactivateAll()",
        "doc" : "Deactivate all active modal environments.",
        "notes" : [

        ],
        "signature" : "ModalMgr:deactivateAll()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "deactivateAll",
        "parameters" : [

        ]
      },
      {
        "desc" : "Create a new modal keybindings environment",
        "stripped_doc" : [
          "Create a new modal keybindings environment",
          ""
        ],
        "def" : "ModalMgr:new(id)",
        "doc" : "Create a new modal keybindings environment\n\nParameters:\n * id - A string specifying ID of new modal keybindings",
        "notes" : [

        ],
        "signature" : "ModalMgr:new(id)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "new",
        "parameters" : [
          " * id - A string specifying ID of new modal keybindings"
        ]
      },
      {
        "desc" : "Toggle the cheatsheet display of current modal environments's keybindings.",
        "stripped_doc" : [
          "Toggle the cheatsheet display of current modal environments's keybindings.",
          ""
        ],
        "def" : "ModalMgr:toggleCheatsheet([idList], [force])",
        "doc" : "Toggle the cheatsheet display of current modal environments's keybindings.\n\nParameters:\n * iterList - An table specifying IDs of modal environments or active_list. Optional, defaults to all active environments.\n * force - A optional boolean value to force show cheatsheet, defaults to `nil` (automatically).",
        "notes" : [

        ],
        "signature" : "ModalMgr:toggleCheatsheet([idList], [force])",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "toggleCheatsheet",
        "parameters" : [
          " * iterList - An table specifying IDs of modal environments or active_list. Optional, defaults to all active environments.",
          " * force - A optional boolean value to force show cheatsheet, defaults to `nil` (automatically)."
        ]
      }
    ],
    "doc" : "Modal keybindings environment management. Just an wrapper of `hs.hotkey.modal`.\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/ModalMgr.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/ModalMgr.spoon.zip)",
    "name" : "ModalMgr"
  }
]